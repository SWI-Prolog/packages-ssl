################################################################
# Makefile template for SWI-Prolog SSL interface
#
# This template is used by configure to create Makefile.  See
# the file INSTALL for further installation instructions.
#
# License: Simplified BSD
#
# Author: Jan Wielemaker (J.Wielemaker@vu.nl)
#	  Jan van der Steen
################################################################

PACKAGE=ssl
DOC=ssl
include ../Makefile.defs

CFLAGS+= -I. -DSERVER_CERT_REQUIRED=TRUE -DCLIENT_CERT_REQUIRED=TRUE
# COFLAGS=-gdwarf-2 -g3

LIBS=@LIBS@

LIBPL=		@PLTARGETS@
TARGETS=	@TARGETS@
EXAMPLES=	client.pl server.pl https.pl

SSLOBJ=		ssl4pl.o ../clib/nonblockio.o ../clib/error.o
CRYPTOOBJ=	crypto4pl.o ../clib/nonblockio.o ../clib/error.o

all:		$(TARGETS)

ssl4pl.@SO@:	$(SSLOBJ)
		$(LD) $(LDSOFLAGS) -o $@ $(SSLOBJ) $(LIBS) $(LIBPLSO)

crypto4pl.@SO@:	$(CRYPTOOBJ)
		$(LD) $(LDSOFLAGS) -o $@ $(CRYPTOOBJ) $(LIBS) $(LIBPLSO)

ssl4pl.o:	cryptolib.c
crypto4pl.o:	cryptolib.c

install:	$(TARGETS) $(LIBPL)
		mkdir -p $(DESTDIR)$(SOLIBDIR)
		for f in $(TARGETS); do \
		  $(INSTALL_PROGRAM) $$f $(DESTDIR)$(SOLIBDIR); \
		done
		for f in $(LIBPL); do \
		  $(INSTALL_DATA) $$f $(DESTDIR)$(PLLIBDIR); \
		done
		mkdir -p $(DESTDIR)$(PLLIBDIR)/http
		$(INSTALL_DATA) http_ssl_plugin.pl $(DESTDIR)$(PLLIBDIR)/http
		$(MKINDEX)

ln-install::
		@$(MAKE) INSTALL='../ln-install' \
			 INSTALL_DATA='../ln-install' \
			 INSTALL_PROGRAM='../ln-install' \
			 install

rpm-install:	install

html-install:	install-examples
		mkdir -p $(DESTDIR)$(PKGDOCDIR)
		$(INSTALL) -m 644 $(DOC).html $(DESTDIR)$(PKGDOCDIR)

pdf-install:	install-examples
		mkdir -p $(DESTDIR)$(PKGDOCDIR)
		$(INSTALL) -m 644 $(DOC).pdf $(DESTDIR)$(PKGDOCDIR)

install-examples::
		mkdir -p $(DESTDIR)$(PKGEXDIR)/ssl
		$(INSTALL_DATA) $(EXAMPLES) $(DESTDIR)$(PKGEXDIR)/ssl
		cp -r etc $(DESTDIR)$(PKGEXDIR)/ssl

uninstall::
		(cd $(SOLIBDIR) && rm -f $(TARGETS))
		(cd $(PLBASE)/library && rm -f $(LIBPL))
		rm -r $(EXDIR)
		$(MKINDEX)

################################################################
# SSL Certificate stuff
################################################################

servercert:
	openssl x509 -inform PEM -text -noout -in etc/server/server-cert.pem

clientcert:
	openssl x509 -inform PEM -text -noout -in etc/client/client-cert.pem


################################################################
# Documentation
################################################################

LIBTOTEX=$(PUBLICPL) -q -f ../../man/libtotex.pl -g libtotex --

TEXEXTRA=	ssllib.tex crypto.tex cryptolib.tex \
		saml.tex xmldsig.tex xmlenc.tex
$(TEX):		$(TEXEXTRA)

ssllib.tex:	ssl.pl
		$(PLTOTEX) --out=$@ --section 'library(ssl)'
cryptolib.tex:	cryptolib.md crypto.pl
		mkdir -p summaries.d
		$(LIBTOTEX) --lib=crypto --module=crypto cryptolib.md
saml.tex:	saml.pl
		$(PLTOTEX) --out=$@ --subsection 'library(saml)'
xmldsig.tex:	xmldsig.pl
		$(PLTOTEX) --out=$@ --subsection 'library(xmldsig)'
xmlenc.tex:	xmlenc.pl
		$(PLTOTEX) --out=$@ --subsection 'library(xmlenc)'

################################################################
# Check
################################################################

check::		tests/test_certs
		$(PL) -q -f test_ssl.pl -F none -g test_ssl,halt -t 'halt(1)'

tests/test_certs:
		(cd tests && ./mkcerts.sh >& /dev/null)

################################################################
# Clean
################################################################

clean:
		rm -f *~ *.o *% a.out core config.log ssl.tex
		rm -f crypto.tex cryptolib.tex
		rm -rf summaries.d
		$(RUNTEX) --clean ssl

clean_certs:
		rm -rf tests/test_certs tests/*.csr tests/11-*.der

distclean:	clean clean_certs
		rm -f $(TARGETS) config.cache config.h config.status Makefile
		rm -f $(DOC).aux $(DOC).log $(DOC).out $(DOC).toc
		rm -rf html
		rm -rf autom4te.cache
